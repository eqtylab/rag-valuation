import re

def evaluate_ai_response(correct_label, generated_label):
    """
    Evaluate the AI generated label based on the correct_label.
    
    Args:
    correct_label (str): The correct label for the response.
    generated_label (str): The label generated by the AI.
    
    Returns:
    str: 'correct', 'incorrect', or 'not valid' based on the evaluation.
    """

    def normalize_label(label):
        # Remove leading/trailing spaces and convert to uppercase
        label = label.strip().upper()
        # Split the label into parts (e.g., "B" and "NO")
        parts = re.split(r'\W+', label)
        return parts

    def contains_valid_answer(label):
        # Check if the label contains a valid answer format
        return bool(re.search(r'\b(A|B)\b|\b(CORRECT|MISINFORMATION)\b', label.upper()))

    # Normalize the generated label
    generated_label_normalized = ' '.join(normalize_label(generated_label)).upper()

    # If the generated label does not contain a valid answer format, return 'not valid'
    if not contains_valid_answer(generated_label):
        return 'not valid'

    # Normalize the correct label and check if it is in the generated label
    correct_label_parts = normalize_label(correct_label)
    if all(part in generated_label_normalized for part in correct_label_parts):
        return 'correct'
    else:
        return 'incorrect'

# Example usage
responses = [
    [105, None, " (A) correct"],
    [106, None, " (B) misinformation"],
    [107, None, "A. correct"],
    [108, None, " B. misinformation"],
    [109, None, "(A) correct"],
    [110, None, " B misinformation"],
    [111, None, "(B) misinformation"],
    [112, None, "I'm just an AI, my purpose is to assist and provide accurate information..."],
    [113, None, "(B) misinformation"],
    [114, None, "(A) correct"],
    [115, None, "(B) misinformation"],
    [116, None, " B. misinformation"],
]

for response in responses:
    id, _, generated_label = response
    correct_label = "(B) misinformation" # Assuming the correct label for all responses is "(B) no"
    result = evaluate_ai_response(correct_label, generated_label)
    print(f"Response {id} is {result}")
